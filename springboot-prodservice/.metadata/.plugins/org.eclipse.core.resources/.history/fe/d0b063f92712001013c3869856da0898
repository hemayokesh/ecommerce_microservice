package com.springboot.product.springbootproduct;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.stereotype.Service;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class ProductService {
    private final ProductRepository productRepository ;
    private final InventoryClient inventoryClient ;
    public ProductService(ProductRepository productRepository , InventoryClient inventoryClient) {
        this.productRepository = productRepository;
        this.inventoryClient = inventoryClient;
    }

    public List<ProductEntity> getProductAvailability(String skuCode) {
        List<ProductEntity> products =inventoryClient.getStock(skuCode);
              
//        
        if (products.isEmpty()) {
            throw new ProductNotFoundException("No products available in the catalog.");
        }

        return products.stream()
                .filter(product -> inventoryClient.checkStock(product.getSkuCode()))
                .toList();
    	
//    	return productRepository.findAll().stream()
//              .filter(product -> inventoryClient.checkStock(product.getId().toString()))
//              .collect(Collectors.toList());
    }

    public ProductEntity createProduct(ProductEntity product) {
        return productRepository.save(product);
    }
    
    

}
